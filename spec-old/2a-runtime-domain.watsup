;;
;; Identifiers
;; Already defined in the EL syntax
;;

;;
;; Type identifiers
;;

syntax tid = id
syntax tidset = set<tid>

dec $fresh_tid() : tid

dec $fresh_tids(nat) : tid*

def $fresh_tids(0) = eps
def $fresh_tids(n) = $fresh_tid() :: $fresh_tids($(n - 1))
  -- otherwise

;;
;; Function and constructor identifiers
;; A pair of function/constructor name and a list of parameter names,
;; with a boolean flag indicating whether the parameter has a default value
;;

syntax fid = id (id, bool)*
syntax cid = fid

;; Constructing a function identifier from a function signature

dec $to_fid(id, param*) : fid
dec $to_fid'(param*) : (id, bool)*

def $to_fid(id, param*) = id $to_fid'(param*)
def $to_fid'(eps) = eps
def $to_fid'(param_h :: param_t*) = (id, true) :: $to_fid'(param_t*)
  -- if id dir type expr = param_h
def $to_fid'(param_h :: param_t*) = (id, false) :: $to_fid'(param_t*)
  -- if id dir type eps = param_h

;; Constructing a constructor identifier from a constructor signature

dec $to_cid(id, param*) : cid
def $to_cid(id, param*) = $to_fid(id, param*)

;;
;; Object identifiers
;; A fully-qualified path to an object
;;

syntax oid = id*
